

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://www.opsbygandal.dev/</id>
  <title>Yogesh Gandal</title>
  <subtitle>A DevSecOps portfolio highlighting my projects and learning journey through hands-on blogs, guided by AI assistance....</subtitle>
  <updated>2025-04-24T22:27:29+02:00</updated>
  <author>
    <name>Yogesh Shankar Gandal</name>
    <uri>https://www.opsbygandal.dev/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://www.opsbygandal.dev/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://www.opsbygandal.dev/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> ¬© 2025 Yogesh Shankar Gandal </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Git Got Messy: How I Safely Reverted to a Clean Commit Without Losing My Work</title>
    <link href="https://www.opsbygandal.dev/posts/git-got-messy-clean-reset/" rel="alternate" type="text/html" title="Git Got Messy: How I Safely Reverted to a Clean Commit Without Losing My Work" />
    <published>2025-04-20T02:00:00+02:00</published>
  
    <updated>2025-04-20T02:00:00+02:00</updated>
  
    <id>https://www.opsbygandal.dev/posts/git-got-messy-clean-reset/</id>
    <content type="text/html" src="https://www.opsbygandal.dev/posts/git-got-messy-clean-reset/" />
    <author>
      <name>Yogesh Shankar Gandal</name>
    </author>

  
    
    <category term="DevSecOps" />
    
    <category term="Git" />
    
  

  <summary>üß© The Situation  I had a working build from six hours ago. But after a flurry of local experiments and edits, I found myself in a tangled mess of changes, errors, and untracked files.  I wanted a clean slate, but I also didn‚Äôt want to lose the ideas and partial work I‚Äôd explored.  Sound familiar? This is one of those real-world Git moments where theory meets panic ‚Äî and experience begins.    üò∞ ...</summary>

  </entry>

  
  <entry>
    <title>Governance &amp; Policy as Code: My DevSecOps Operating System</title>
    <link href="https://www.opsbygandal.dev/posts/governance-tools-comparison/" rel="alternate" type="text/html" title="Governance &amp;amp; Policy as Code: My DevSecOps Operating System" />
    <published>2025-04-15T02:00:00+02:00</published>
  
    <updated>2025-04-15T02:00:00+02:00</updated>
  
    <id>https://www.opsbygandal.dev/posts/governance-tools-comparison/</id>
    <content type="text/html" src="https://www.opsbygandal.dev/posts/governance-tools-comparison/" />
    <author>
      <name>Yogesh Shankar Gandal</name>
    </author>

  
    
    <category term="DevSecOps" />
    
    <category term="Governance" />
    
  

  <summary>üîê DevSecOps Governance Tools Comparison  As a DevSecOps practitioner, it‚Äôs critical to choose the right Policy-as-Code tool based on your stack and use case. Below is a comparison of 5 key tools used to enforce governance across CI/CD pipelines, Infrastructure as Code, and Kubernetes.    üìä Tool Overview Table                 Tool       Ecosystem Fit       Policy Language       Best For       Re...</summary>

  </entry>

  
  <entry>
    <title>Securing Terraform with Checkov: My First Governance Hardening Pass</title>
    <link href="https://www.opsbygandal.dev/posts/checkov-terraform-hardening/" rel="alternate" type="text/html" title="Securing Terraform with Checkov: My First Governance Hardening Pass" />
    <published>2025-04-15T02:00:00+02:00</published>
  
    <updated>2025-04-15T02:00:00+02:00</updated>
  
    <id>https://www.opsbygandal.dev/posts/checkov-terraform-hardening/</id>
    <content type="text/html" src="https://www.opsbygandal.dev/posts/checkov-terraform-hardening/" />
    <author>
      <name>Yogesh Shankar Gandal</name>
    </author>

  
    
    <category term="DevSecOps" />
    
    <category term="Governance" />
    
  

  <summary>üîç Context: As part of my DevSecOps learning journey (Epic 21: Governance &amp;amp;amp; Policy as Code), I wanted to enforce security best practices in a live Terraform project. The goal was to use Checkov to scan my Infrastructure as Code (IaC) and apply necessary fixes to improve compliance, visibility, and confidence in what I was deploying.    üß± Scenario Before Scan  I began with a basic Terraform s...</summary>

  </entry>

  
  <entry>
    <title>How I Brought My Broken DevSecOps Blog Back to Life ‚Äì A Jekyll, Ruby &amp; GitHub Pages Debugging Journey</title>
    <link href="https://www.opsbygandal.dev/posts/jekyll-ruby-debugging-journey/" rel="alternate" type="text/html" title="How I Brought My Broken DevSecOps Blog Back to Life ‚Äì A Jekyll, Ruby &amp;amp; GitHub Pages Debugging Journey" />
    <published>2025-04-14T02:00:00+02:00</published>
  
    <updated>2025-04-15T02:00:00+02:00</updated>
  
    <id>https://www.opsbygandal.dev/posts/jekyll-ruby-debugging-journey/</id>
    <content type="text/html" src="https://www.opsbygandal.dev/posts/jekyll-ruby-debugging-journey/" />
    <author>
      <name>Yogesh Shankar Gandal</name>
    </author>

  
    
    <category term="Jekyll" />
    
    <category term="GitHub Pages" />
    
    <category term="Ruby" />
    
    <category term="Debugging" />
    
  

  <summary>My debugging journey fixing broken builds caused by Ruby version mismatches, unsupported Jekyll plugins, and GitHub Pages limitations ‚Äî with real errors and fixes.</summary>

  </entry>

  
  <entry>
    <title>Terraform Journey: From Zero to Launching EC2 on AWS</title>
    <link href="https://www.opsbygandal.dev/posts/terraform-basics/" rel="alternate" type="text/html" title="Terraform Journey: From Zero to Launching EC2 on AWS" />
    <published>2025-04-11T02:00:00+02:00</published>
  
    <updated>2025-04-15T02:00:00+02:00</updated>
  
    <id>https://www.opsbygandal.dev/posts/terraform-basics/</id>
    <content type="text/html" src="https://www.opsbygandal.dev/posts/terraform-basics/" />
    <author>
      <name>Yogesh Shankar Gandal</name>
    </author>

  
    
    <category term="Terraform" />
    
    <category term="DevSecOps" />
    
  

  <summary>üß† Why I Chose Terraform  Coming from a project management and academic background, I wanted to actually build things ‚Äî infrastructure included. I chose Terraform because:     Declarative Syntax: Write what you want, not how to get there   Multi-Cloud Ready: Works with AWS, Azure, GCP and more   DevSecOps Integration: Fits perfectly in CI/CD pipelines   Community Support: 1,000+ providers and mo...</summary>

  </entry>

</feed>


